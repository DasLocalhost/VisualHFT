<UserControl x:Class="MarketConnectors.Binance.UserControls.PluginSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="13"
             TextOptions.TextFormattingMode="Ideal"
             TextOptions.TextRenderingMode="Auto"
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{StaticResource MaterialDesignFont}"
             
             d:DesignHeight="480" d:DesignWidth="600">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <TextBlock Text="{Binding Header}" d:Text="Test Header Binance" FontWeight="Bold" Margin="5" FontSize="15" />

        <Border Grid.Row="1" BorderBrush="White" BorderThickness="0 0 0 1" Margin="5 0 30 0" />

        <StackPanel Grid.Row="2" Margin="20 10 0 0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>

                <TextBlock Text="Provider ID" VerticalAlignment="Center" Margin="5 5 0 5" />
                <TextBox Grid.Column="1" Text="{Binding ProviderId, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" d:Text="10" 
                             VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="5" />
            </Grid>

            <Grid Margin="0 5 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>

                <TextBlock Text="Provider Name" VerticalAlignment="Center" Margin="5 5 0 5" />
                <TextBox Grid.Column="1" Text="{Binding ProviderName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" d:Text="100"
                             VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="5" />
            </Grid>

            <Grid Margin="0 5 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>

                <TextBlock Text="API Key" VerticalAlignment="Center" Margin="5 5 0 5" />
                <TextBox Grid.Column="1" Text="{Binding ApiKey, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" d:Text="100"
                             VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="5" />
            </Grid>

            <Grid Margin="0 5 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>

                <TextBlock Text="API Secret" VerticalAlignment="Center" Margin="5 5 0 5" />
                <TextBox Grid.Column="1" Text="{Binding ApiSecret, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" d:Text="100"
                             VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="5" />
            </Grid>

            <Grid Margin="0 5 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Text="Symbols (comma separated)" Margin="5 5 0 5" />
                <TextBlock Text="ℹ️ Normalization" Grid.Column="1" Cursor="Hand" Margin="5 5 10 5" >
                    <TextBlock.ToolTip>
                        <ToolTip>
                            <StackPanel>
                                <TextBlock TextWrapping="Wrap" Width="350">
                                        <Run FontWeight="Bold">Symbol Normalization Explained</Run>
                                        <LineBreak />

                                        <Run>Different exchanges use varying symbol formats for the same financial instrument. For consistent analysis across exchanges, it's often beneficial to represent these symbols in a standardized format. This process is known as "normalization".</Run>

                                        <LineBreak />
                                        <LineBreak />

                                        <Run FontWeight="Bold">Why Normalize?</Run>
    
                                        <LineBreak />

                                        <Run>Imagine you're analyzing BTC/USD data from both Binance and Bitfinex. Without normalization, you'd be dealing with BTCUSDT on Binance and tBTCUSD on Bitfinex. This can be cumbersome and error-prone. Normalization allows you to represent both as BTC/USD, making your analyses clearer and more streamlined.</Run>

                                        <LineBreak />
                                        <LineBreak />

                                        <Run FontWeight="Bold">How to Input Symbols:</Run>
    
                                        <LineBreak />

                                        <Run>For the sake of clarity, you can define the normalization right within the symbol input. For example:</Run>

                                        <LineBreak />

                                        <Run>- Binance: BTCUSDT(BTC/USD),ETHUSDT(ETH/USD)</Run>
                                            
                                        <LineBreak />
                                            
                                        <Run>- Bitfinex: tBTCUSD(BTC/USD),tETHUSD(ETH/USD)</Run>

                                        <LineBreak />
                                        <LineBreak />

                                        <Run>Here, the format inside the parentheses represents the normalized symbol. If you wish not to normalize, simply omit the parentheses. However, for the validation to succeed, ensure your format adheres to the above examples.</Run>
                                </TextBlock>

                            </StackPanel>
                        </ToolTip>
                    </TextBlock.ToolTip>
                 </TextBlock>

                <TextBox Grid.Row="1" Grid.ColumnSpan="2" Text="{Binding SymbolsText, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" d:Text="BTCUSDT(BTC/USD),ETHUSDT(ETH/USD)"
                         ToolTip="Enter symbols separated by commas (e.g., BTCUSDT,ETHUSDT)" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="5" />
            </Grid>

            <Grid Margin="0 5 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>

                <TextBlock Text="Depth Levels" VerticalAlignment="Center" Margin="5 5 0 5" />
                <TextBox Grid.Column="1" Text="{Binding DepthLevels, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" d:Text="100"
                         VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="5" />
            </Grid>

            <Grid Margin="0 5 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>

                <TextBlock Text="Update Interval (ms)" VerticalAlignment="Center" Margin="5 5 0 5" />
                <TextBox Grid.Column="1" Text="{Binding UpdateIntervalMs, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" d:Text="100"
                         VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="5" />
            </Grid>
        </StackPanel>
    </Grid>
</UserControl>
